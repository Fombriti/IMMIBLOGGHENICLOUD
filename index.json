[{"body":"VMware Aria related links https://garyflynn.com/tags/vra/ https://vmwarecode.com/ https://blog.stijnvermoesen.be/ ","link":"https://www.immiblogghenicloud.cloud/usefull-links/","section":"","tags":null,"title":"Usefull Links"},{"body":"Remote Desktop Manager is a fantastic tool for centralized management of various accesses to VMs and services. I have personally always used RDM to save the RDP and SSH connections that I most frequently used.\nThis tool, when used in conjunction with Devolutions Server (DVLS), is excellent for teams that need a centralized and common repository for access.\nRecently, I found myself in need of automating the creation of entries within the various Vaults inside DVLS to reduce the effort caused by adding them manually.\nIn this post, I will show how to create a Workflow within VRO and a subscription in VRA to automate the addition of the entry following the deployment of a VM in VRA. The type of connection in this case will be a CyberarkPSM Connection. As this is a simplified example, we will statically define the Vault in which the entry will be created.\nRDM Preparation First of all, it is necessary to create an APP Account that is part of a local admin group and that has access to the Vault where you want to create the Entry.\nTo simplify the creation with all the necessary data, we create a shared Template with the information required for the connection, such as Privileged Account, PSM Server, and Connection Component. Let's take note of the name of the RDM Vault in which we want to create the connection, as we will need it later.\nCreation of the Workflow Environment First of all, it is necessary to create the Environment that includes the RDM PowerShell module.\nThe name of the module is Devolutions.Powershell, and the version in this case is 2023.2.0.9 Note Be aware of the version compatibility between the module and the DVLS server. If you are using a server version 2023.2.XX as in this example, you will need to use the ps module version 2023.2.XX; otherwise, the script will connect in Read-Only mode. It's important to have the server and ps module versions aligned.\nWorflow The workflow consists of two Scriptable tasks. The first, \u0026quot;Get Properties,\u0026quot; retrieves the VM name and IP address from the deployment by reading the InputProperties. The second, \u0026quot;AddSessionToRDMVault,\u0026quot; connects to the server and creates the entry using the data retrieved from the first script.\nAs Variables and Input/Output, we have: The JavaScript code for the Get Properties task, which has \u0026quot;inputProperties\u0026quot; as input and \u0026quot;VMresourceName\u0026quot; and \u0026quot;vmIpAddress\u0026quot; as output, is very simple:\n1var resourceName = inputProperties.get(\u0026#34;resourceNames\u0026#34;); 2var resourceIp = inputProperties.get(\u0026#39;addresses\u0026#39;)[0][0]; 3 4System.log(\u0026#34;VM Name: \u0026#34; + resourceName[0]); 5System.log(\u0026#34;VM IP: \u0026#34; + resourceIp); 6 7VMresourceName = resourceName[0]; 8vmIpAddress = resourceIp; This is the PowerShell code for the \u0026quot;AddSessionToRDMVault\u0026quot; task, which has \u0026quot;VMresourceName\u0026quot; and \u0026quot;vmIpAddress\u0026quot; as inputs.\n1function Handler($context, $inputs) { 2 3 #setup connection to dvls 4 $dsname = \u0026#34;YOUR_DVLS_SERVER_CONNECTION_NAME_HERE\u0026#34; 5 $dsurl = \u0026#34;YOUR_DVLS_SERVER_URL_HERE\u0026#34; 6 $appkey = \u0026#34;eYOUR_APP_KEY_HERE\u0026#34; 7 $appsecret = \u0026#34;YOUR_APP_SECRET_HERE\u0026#34; 8 New-RDMDataSource -DVLS -Name $dsname -Server $dsurl -ScriptingTenantID $appkey -ScriptingApplicationPassword $appsecret -SetDatasource 9 $ds = Get-RDMDataSource -Name $dsname 10 Set-RDMDatasourceProperty -DataSource $ds -Property \u0026#34;Timeout\u0026#34; -Value 60 11 Set-RDMCurrentDataSource $ds.id 12 13 #get and set vault id 14 $repo = Get-RDMRepository -Name \u0026#34;YOUR_VAULT_NAME_HERE\u0026#34; 15 $repoid = $repo.id 16 Set-RDMCurrentRepository -id $repoid 17 18 #set session input details 19 $template = Get-RDMTemplate | Where-Object -FilterScript {$_.Name -eq \u0026#34;YOUR_TEMPLATE_NAME_HERE\u0026#34;} 20 $namesess = $inputs.VMresourceName 21 $hostip = $inputs.vmIpAddress 22 23 #create Session Entry 24 $session = New-RDMSession -Name $namesess -Host $hostip -Type \u0026#34;CyberArkPSM\u0026#34; -TemplateID $template.id -SetSession 25 Set-RDMSession -Session $session -Refresh 26 Update-RDMUI 27 28 #disconnect from DVLS 29 Get-RDMDataSource | Remove-RDMDataSource 30 31 return $output 32 33} Our Workflow looks like this: Extensibility Subscription To automatically execute the workflow with every VM deployment, we need to create a Subscription within the Extensibility menu of the Cloud Assembly as follows: The event topic should be \u0026quot;Compute post provision\u0026quot; so that our workflow is initiated only after the allocation of resources is complete. In this way, all the data necessary for its execution will be available. With these settings, the Subscription will be active for any deployment of any project within the organization.It is possible to filter it by event topic or by project. See Create an extensibility subscription\nConclusions When a new VM deployment is executed, this output is obtained (do not mind the different workflow name in this screenshot): In the log, many warnings of \u0026quot;The operation has timed out.\u0026quot; are visible. To solve this problem, on the suggestion of Devolutions support, I added the following line to the script:\n1Set-RDMDatasourceProperty -DataSource $ds -Property \u0026#34;Timeout\u0026#34; -Value 60 However, this did not resolve the issue with the warnings. Nonetheless, despite the warnings, the script functions correctly, and we find our entry within RDM. Unfortunately, the documentation for the Devolutions PowerShell module is unclear, and since I don't have much time and it works, for now, I'm simply ignoring the warning.\nThe steps described in this post are simplified and may require further customization.\n","link":"https://www.immiblogghenicloud.cloud/posts/add-a-connection-entry-to-rdm-vault-on-new-vm-deployment/","section":"posts","tags":["POWERSHELL","RDM","VRA","VRO"],"title":"Add a connection entry to RDM Vault on new vm deployment"},{"body":"","link":"https://www.immiblogghenicloud.cloud/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://www.immiblogghenicloud.cloud/","section":"","tags":null,"title":"IMMIBLOGGHENICLOUD"},{"body":"","link":"https://www.immiblogghenicloud.cloud/posts/","section":"posts","tags":null,"title":"Posts"},{"body":"","link":"https://www.immiblogghenicloud.cloud/tags/powershell/","section":"tags","tags":null,"title":"POWERSHELL"},{"body":"","link":"https://www.immiblogghenicloud.cloud/tags/rdm/","section":"tags","tags":null,"title":"RDM"},{"body":"","link":"https://www.immiblogghenicloud.cloud/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://www.immiblogghenicloud.cloud/categories/vmware/","section":"categories","tags":null,"title":"VMware"},{"body":"","link":"https://www.immiblogghenicloud.cloud/tags/vra/","section":"tags","tags":null,"title":"VRA"},{"body":"","link":"https://www.immiblogghenicloud.cloud/tags/vro/","section":"tags","tags":null,"title":"VRO"},{"body":"Hi and Welcom to I MI' BLOGGHE NI CLOUD!\nI am Federico an Italian guy that works and is interested to IT World and this is my blog.\nI will use this blog to write some notes about my work and expiriences.\nHope someone will find some useful information!!\n","link":"https://www.immiblogghenicloud.cloud/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://www.immiblogghenicloud.cloud/series/","section":"series","tags":null,"title":"Series"}]